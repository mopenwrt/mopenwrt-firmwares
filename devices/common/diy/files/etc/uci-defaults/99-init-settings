#!/bin/bash
# Set default theme to luci-theme-argon
uci set luci.main.mediaurlbase='/luci-static/argon'

# Disable opkg signature check
# sed -i 's/option check_signature/# option check_signature/g' /etc/opkg.conf

# Disable autostart by default for some packages
cd /etc/rc.d
rm -f S98udptools || true
rm -f S99nft-qos || true

# uci set firewall.@zone[1].output='ACCEPT'
# uci set firewall.@zone[1].input='ACCEPT'
# the zone[1] means WAN zone.
/usr/bin/lua - <<EOF
require("uci")
local cursor = uci.cursor()
function findId(config, section, name)
  local result
  cursor:foreach(config, section, function(zone)
    if zone["name"] == name then
      result = zone[".name"]
      return false
    end
  end)
  return result
end
local wanZoneId = findId("firewall", "zone", "wan")
local allowWanInput="REJECT"
local allowWanForward="REJECT"
if wanZoneId then
  cursor:set("firewall", wanZoneId, "output", "ACCEPT")
  cursor:set("firewall", wanZoneId, "input", allowWanInput)
  cursor:set("firewall", wanZoneId, "forward", allowWanForward)
end

if not findId("firewall", "rule", "Allow-mDNS") then
  local allowMDNS = cursor:add("firewall", "rule")
  cursor:set("firewall", allowMDNS, "name", "Allow-mDNS")
  cursor:set("firewall", allowMDNS, "enabled", "1")
  cursor:set("firewall", allowMDNS, "target", "ACCEPT")
  cursor:set("firewall", allowMDNS, "proto", "udp")
  cursor:set("firewall", allowMDNS, "src", "*")
  cursor:set("firewall", allowMDNS, "src_port", "5353")
  cursor:set("firewall", allowMDNS, "dest_port", "5353")
  cursor:set("firewall", allowMDNS, "dest_ip", "224.0.0.251")
  cursor:commit("firewall")
end
EOF

# Fixing permissions
chmod -R u=rwX,go= /etc/dropbear
# sshd listen on all interfaces
uci delete dropbear.@dropbear[0].Interface

# sshd disable password auth.
if [ -s "/etc/dropbear/authorized_keys" ]; then
  uci set dropbear.@dropbear[0].PasswordAuth='off'
  uci set dropbear.@dropbear[0].RootPasswordAuth='off'
fi
uci commit dropbear

# change the theme-argon use dark mode
uci set argon.@global[0].mode='dark'
uci set argon.@global[0].bing_background='0'
uci commit argon

sysctl -w net.ipv4.tcp_congestion_control="bbr"
uci set turboacc.config.bbr_cca='1'
uci commit turboacc

# Try to execute init.sh (if exists)

BOOT_DIR="/boot"

if [ ! -f "$BOOT_DIR/init.sh" ]; then
bash "$BOOT_DIR/init.sh"
fi

exit 0
